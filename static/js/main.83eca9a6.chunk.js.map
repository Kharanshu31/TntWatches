{"version":3,"sources":["containers/Signup.js","containers/SingleProduct.js","containers/Cart.js","containers/Users.js","App.js","registerServiceWorker.js","index.js"],"names":["Signup","logouthandler","props","history","push","carthandler","className","onClick","this","Component","withRouter","Singledetail","name","type","style","display","marginLeft","Cart","Users","submitchange","placeholder","onChange","handlenamechange","handlepasswordchange","href","App","path","component","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.83eca9a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport \"./Signup.css\";\r\n\r\nclass Signup extends Component {\r\n\r\n  logouthandler=()=>{\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  carthandler = () =>{\r\n    this.props.history.push(\"/mycart\");\r\n  }\r\n\r\n    // <img classNameName=\"mb-4\" src=\"/docs/4.4/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\">\r\n       // <input type=\"submit\" name=\"\" value=\"Login\" href=\"#\"></input>\r\n  render(){\r\n    return(\r\n      <div>\r\n      <div className=\"container\">\r\n      <div className=\"row\">\r\n      <div className=\"col-md-6\">\r\n          <div className=\"card\">\r\n              <form className=\"box\">\r\n                  <h1>Where To Go?</h1>\r\n                   <button className=\"loginbutton\" onClick={this.logouthandler}>Logout</button>\r\n                   <button className=\"loginbutton\" onClick={this.carthandler}>Cart</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Signup);\r\n","import React from 'react';\r\nimport \"./Cart.css\";\r\n// import telecom from \"../../../assets/telecom.jpg\";\r\n\r\nconst Singledetail = (props) =>{\r\n  // <img src={telecom} className=\"telecomimg\" alt=\"Telecom\"/>\r\n\r\n  return (\r\n    <div className=\"seller\">\r\n\r\n      <div className=\"sellerinfo\">\r\n        <p className=\"sellertype\">{props.name}</p>\r\n        <p className=\"sellertype\">{props.type}</p>\r\n      </div>\r\n\r\n      <div style={{display:\"flex\",marginLeft: \"60%\"}}>\r\n      <h3>7,499</h3>\r\n      <p className=\"cut\">10,000</p>\r\n      <p className=\"discount\">30% off</p>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Singledetail;\r\n","import React from \"react\";\r\nimport \"./Cart.css\";\r\nimport Singledetail from \"./SingleProduct\";\r\n\r\nconst Cart = ()=>{\r\n\r\n  // {cart.productsList.map(el=>{\r\n  //   return <Singledetail key={el.productsData.id} name={el.productsData.name} type={el.productsData.type}/>\r\n  // })}\r\n  //\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Singledetail name=\"One Plus 7\" type=\"Mobile\" />\r\n        <Singledetail name=\"Honor 7x\" type=\"Mobile\" />\r\n        <Singledetail name=\"Asus Rog Strix\" type=\"Mobile\" />\r\n        <Singledetail name=\"Samsung\" type=\"LED TV\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cart;\r\n","import React,{Component} from \"react\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass Users extends Component {\r\n\r\n  submitchange=()=>{\r\n    this.props.history.push(\"/signup\");\r\n  }\r\n\r\n  render () {\r\n      return (\r\n        <div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"card\">\r\n                <form className=\"box\">\r\n                    <h1>Login</h1>\r\n                    <p className=\"text-muted\"> Please enter your login and password!</p>\r\n                    <input type=\"text\" name=\"\" placeholder=\"Username\" onChange={this.handlenamechange}></input>\r\n                    <input type=\"password\" name=\"\" placeholder=\"Password\" onChange={this.handlepasswordchange}></input>\r\n                    <a className=\"text-muted forgot\" href=\"#\">Forgot password?</a>\r\n                    <button className=\"loginbutton\" onClick={this.submitchange}>Login</button>\r\n              </form>\r\n              </div>\r\n             </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(Users);\r\n","import React, { Component } from 'react';\r\nimport {Link,Route,withRouter} from 'react-router-dom';\r\nimport Signup from \"./containers/Signup\";\r\nimport Cart from \"./containers/Cart\";\r\nimport Users from './containers/Users';\r\n\r\nimport \"./App.css\"\r\n\r\nclass App extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n              <div>\r\n                <h1 className=\"loginheading\">User Info</h1>\r\n              </div>\r\n                <div className=\"Background\">\r\n                    <Route path=\"/signup\" component={Signup} />\r\n                    <Route path=\"/mycart\" component={Cart} />\r\n                    <Route path=\"/\" exact component={Users} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nconst app = (\n    <HashRouter>\n        <App />\n    </HashRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}